//======================================================================================================
// Name                      : Byung Rog Lee
// 
// Course Name               : CS2010
// 
// Class Time                : Monday, Wednesday, Friday (2:30p.m. - 3:30p.m.)
// 
// Program Assignment Number : Program 4
// 
// Program File Name         : LeeB_pgm4
// 
// Dut Date                  : October 16th 2023
// 
// Purpose                   : The purpose of this program is to implement a process to validate a 
//                             checksum typically used for validating International Standard Book Number 
//                             (ISBN) numbers.
// 
// Input                     : The program reads ISBN numbers from an input file named "ISBNs.csv."
//                             Each line in the file contains an ISBN number.
// 
// Processing                : The program processes each ISBN number to calculate its checksum and
//                             determine if it's valid according to the ISBN checksum rules.
//                             It then writes the results to an output file named "ISBN_Out.csv."
// 
// Output                    : The program generates an output file that lists each ISBN number and
//                             indicates whether it is valid or not. The format of the output file
//                             is similar to the input file.
//
// Reflection                : I had problem with debugging but eventually succeeded on running the code.
//                             I actually changed whole code from using stoi() function to just using the
//                             string values itself. It was not easy but was a good practice for me to
//                             practice reading external file, manipulate them and create a output file.
//  
//=======================================================================================================

#include <iostream>
#include <fstream>
#include <string>
#include <string.h>
#include <iomanip>
using namespace std;

constexpr int f() noexcept { return 0; }

int main() {
    static_assert(noexcept(f()), "f should be noexcept");



    // DECLARATION SECTION
    ifstream isbnInputFS;
    ofstream isbnOutputFS;
    string isbnNum;
    char isbnChar;
    int i;
    int checksumDigit;
    int sum;
    char digit = 0;



    // OUTPUT HEADER SECTION
    cout << " ISBN" << "                     " << "Is Valid?" << endl;
    cout << "------------------------------" << endl;



    // FILE OPENING SECTION
    isbnInputFS.open("ISBNs.csv");
    isbnOutputFS.open("ISBN_Out.csv");



    // ERROR CHECKING SECTION
    if (!isbnInputFS.is_open()) {
        cout << "Could not open file ISBNs.csv" << endl;
        return 1;
    }
    if (!isbnOutputFS.is_open()) {
        cout << "Could not open file ISBNs_Out.csv" << endl;
        return 1;
    }



    // OUTPUT FILE HEADER SECTION
    isbnOutputFS << " ISBN" << "                     " << "Is Valid?" << endl;
    isbnOutputFS << "------------------------------" << endl;



    // INPUT SECTION
    isbnInputFS >> isbnNum;



    // PROCESS SECTION
    while (!isbnInputFS.fail()) {
        cout << isbnNum.substr(0, 3) << "-" << isbnNum.substr(3, 2) << "-" << isbnNum.substr(5, 2) << "-" << isbnNum.substr(7, 5) << "-" << isbnNum.substr(12, 1) << "         ";
        isbnChar = isbnNum[12];
        isbnChar = isbnChar - '0';
        sum = 0;
        for (i = 0; i != isbnNum.size() - 1; ++i) {
            digit = isbnNum[i];
            digit = digit - '0';
            if (i % 2 == 0) {
                digit = digit * 1;
            }
            else if (i % 2 == 1) {
                digit = digit * 3;
            }
            sum = sum + digit;
        }

        sum = sum % 10;
        if (sum == 0) {
            checksumDigit = 0;
        }
        else if (sum != 0) {
            sum = 10 - sum;
            checksumDigit = sum;
        }

        if (checksumDigit == isbnChar) {
            cout << "Yes" << endl;
            isbnOutputFS << isbnNum.substr(0, 3) << "-" << isbnNum.substr(3, 2) << "-" << isbnNum.substr(5, 2) << "-" << isbnNum.substr(7, 5) << "-" << isbnNum.substr(12, 1) << "           Yes" << endl;
        }
        else {
            cout << "No " << endl;
        }
        isbnInputFS >> isbnNum;
    }



    // READING ERROR SECTION
    if (!isbnInputFS.eof()) {
        cout << "Input failure before reaching end of file" << endl;
    }



    //FILE CLOSING SECTION
    isbnInputFS.close();
    isbnOutputFS.close();

    return 0;
}
